{"version":3,"sources":["discovery.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAA8B,MAAA,eAAA,CAAA;AACvC,OAAO,EAAE,YAAA,EAAa,MAAA,iBAAA,CAAA;AACtB,OAAO,EAAE,kBAAA,EAAmB,MAAA,uBAAA,CAAA;AAC5B,OAAO,EAAE,gBAAA,EAAkB,wBAAA,EAAyB,MAAA,qBAAA,CAAA;AACpD,MAEC;IADD;;;OAGG;IACH,MAFG,CAAA,OAAA,CAAA,WAAA;QAGC,MAAM,CAFC;YAGH,QAAQ,EAFE,eAAA;YAGV,SAAS,EAFE;gBAGP,gBAAgB;gBAChB;oBACI,OAAO,EAFE,wBAAA;oBAGT,QAAQ,EAFE,EAAE,WAAA,EAAY;iBAG3B;aACJ;SACJ,CAFC;IAGN,CAAC;;AADM,0BAAA,GAAoC;IAG3C,EAFE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAGtB,OAAO,EAFE;oBAGP,YAAY;iBACb;gBACD,YAAY,EAFE,CAAA,kBAAE,CAAkB;gBAGlC,OAAO,EAFE,CAAA,kBAAE,CAAkB;aAG9B,EAFC,EAAG;CAGJ,CAFC;AAGF;;GAEG;AAHF,8BAAA,GAAA,MAAA,EAKA,CAAC;AAGF;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;AAC/B,CAAC","file":"discovery.module.js","sourceRoot":"","sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiscoveryDirective } from './discovery.directive';\nimport { DiscoveryService, DISCOVERY_SERVICE_CONFIG } from './discovery.service';\nexport class DiscoveryModule {\n/**\n * @param {?} apiEndpoint\n * @return {?}\n */\nstatic forRoot(apiEndpoint): ModuleWithProviders {\n    return {\n        ngModule: DiscoveryModule,\n        providers: [\n            DiscoveryService,\n            {\n                provide: DISCOVERY_SERVICE_CONFIG,\n                useValue: { apiEndpoint}\n            }\n        ]\n    };\n}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [DiscoveryDirective],\n  exports: [DiscoveryDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DiscoveryModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDiscoveryModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDiscoveryModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}